<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Now Note!</title>
  <link rel="shortcut icon" href="/f_silver.png" type="image/x-icon">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body, html {
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    body {
      background: #1a1a1a;
      position: relative;
    }

    canvas {
      position: fixed;
      top: 0;
      left: 0;
      z-index: -1;
    }

    .title {
      position: absolute;
      top: 20px;
      left: 20px;
      font-size: 2rem;
      font-weight: bold;
      color: #c084fc;
    }

    .main {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
      padding: 20px;
    }

    .card {
      background: rgba(40, 40, 40, 0.9);
      padding: 40px 30px;
      border-radius: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 20px;
      text-align: center;
      max-width: 400px;
      width: 90%;
      backdrop-filter: blur(5px);
      box-shadow: 0 8px 25px rgba(192, 132, 252, 0.3);
      animation: shadowPulse 2s ease-in-out infinite;
    }

    @keyframes shadowPulse {
      0%, 100% {
        box-shadow: 0 5px 8px rgba(192, 132, 252, 0.3);
      }
      50% {
        box-shadow: 0 5px 20px rgba(192, 132, 252, 0.7);
      }
    }

    .card h4 {
      color: #ccc;
      font-weight: normal;
      margin-top: 10px;
    }

    .search {
      display: flex;
      gap: 10px;
      width: 100%;
    }

    .search input {
      flex: 1;
      padding: 12px 15px;
      border-radius: 10px;
      border: none;
      outline: none;
      background: #2a2a2a;
      color: #fff;
      transition: all 0.3s ease;
    }

    .search input::placeholder {
      color: #aaa;
    }

    .search input:focus {
      background: #353535;
      box-shadow: 0 0 15px #c084fc50;
    }

    .search button {
      padding: 12px 18px;
      border-radius: 10px;
      border: none;
      background: #c084fc;
      color: #111;
      font-size: 1.2rem;
      cursor: pointer;
      transition: 0.2s;
    }

    .search button:hover {
      background: #a05de0;
      transform: scale(1.05);
    }

    .footer {
      position: absolute;
      bottom: 15px;
      right: 20px;
      font-size: 0.9rem;
      color: #aaa;
    }

    .footer a {
      color: #c084fc;
      text-decoration: none;
    }

    .footer a:hover {
      text-decoration: underline;
    }

    @media (max-width: 768px) {
      .card {
        padding: 30px 20px;
      }
      .title {
        font-size: 1.5rem;
      }
    }

    @media (max-width: 480px) {
      .card {
        padding: 25px 15px;
      }
      .search input {
        padding: 10px;
      }
      .search button {
        padding: 10px;
      }
    }
  </style>
</head>
<body>
  <canvas id="bgCanvas"></canvas>

  <div class="title">Now Note</div>

  <div class="main">
    <div class="card">
      <div class="search">
        <input type="text" id="route-page" placeholder="Digite sua página">
        <button id="btnPage"><i class="bi bi-arrow-right-short"></i></button>
      </div>
      <h4>Compartilhe textos e imagens online</h4>
    </div>
  </div>

  <div class="footer">
    Made by <a href="https://github.com/Lipe7k" target="_blank">Felipe Falcirolli</a> &copy; 2025
  </div>

  <script>
    // Redirecionamento
    const btnPage = document.querySelector("#btnPage");
    const pageInput = document.querySelector("#route-page");

    const redirectToPage = () => {
      const value = pageInput.value.trim();
      if (value) window.location.href = `/${value}`;
    }

    btnPage.addEventListener("click", redirectToPage);
    pageInput.addEventListener("keydown", (e) => {
      if (e.key === "Enter") redirectToPage();
    });

    // Fundo animado com partículas
    const canvas = document.getElementById("bgCanvas");
    const ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];
    const colors = ['#c084fc', '#d8b4fe', '#e0c3fc'];

    class Particle {
      constructor() {
        this.reset();
      }

      reset() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 3 + 1;
        this.speedX = (Math.random() - 0.5) * 0.5;
        this.speedY = (Math.random() - 0.5) * 0.5;
        this.color = colors[Math.floor(Math.random() * colors.length)];
      }

      update() {
        this.x += this.speedX;
        this.y += this.speedY;

        if (this.x < 0 || this.x > canvas.width || this.y < 0 || this.y > canvas.height) {
          this.reset();
        }
      }

      draw() {
        ctx.fillStyle = this.color;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
      }
    }

    for (let i = 0; i < 35; i++) {
      particles.push(new Particle());
    }

    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      particles.forEach(p => {
        p.update();
        p.draw();
      });
      requestAnimationFrame(animate);
    }

    animate();

    window.addEventListener('resize', () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });
  </script>
</body>
</html>
